#!/bin/sh
# from https://gist.github.com/linhmtran168/2286aeafe747e78f53bf
# STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$")

# if [[ "$STAGED_FILES" = "" ]]; then
#   exit 0
# fi

# PASS=true

# echo "\nValidating Javascript:\n"

# # Check for eslint
# which eslint &> /dev/null
# if [[ "$?" == 1 ]]; then
#   echo "\t\033[41mPlease install ESlint\033[0m"
#   exit 1
# fi

# for FILE in $STAGED_FILES
# do
#   eslint "$FILE"

#   if [[ "$?" == 0 ]]; then
#     echo "\t\033[32mESLint Passed: $FILE\033[0m"
#   else
#     echo "\t\033[41mESLint Failed: $FILE\033[0m"
#     PASS=false
#   fi
# done

# echo "\nJavascript validation completed!\n"

# if ! $PASS; then
#   echo "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass ESLint but do not. Please fix the ESLint errors and try again.\n"
#   exit 1
# else
#   echo "\033[42mCOMMIT SUCCEEDED\033[0m\n"
# fi

# exit $?

# # from https://gist.github.com/jhartikainen/36a955f3bfe06557e16e
# # files=git diff --cached --name-status | grep '^\(A\|M\).*\.jsx\?$' | sed 's/^[AM]//g'

# # # Prevent ESLint help message if no files matched
# # if [[ $files = "" ]] ; then
# #   exit 0
# # fi

# # failed=0
# # for file in ${files}; do
# #   git show :$file | eslint --stdin --stdin-filename $file
# #   if [[ $? != 0 ]] ; then
# #     failed=1
# #   fi
# # done;

# # if [[ $failed != 0 ]] ; then
# #   echo "ESLint check failed, commit denied"
# #   exit $failed
# # fi

# # set -e
# # [ ! -f Gemfile ] || git diff --exit-code --cached -- Gemfile >/dev/null || bundle check
# # exec "$(git --exec-path)/../../share/git-core/templates/hooks/pre-commit.sample"
