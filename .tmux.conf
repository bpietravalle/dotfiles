set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions
set-option -g history-limit 10000
set-option -g default-shell /bin/zsh

# colors
#setw -g mode-bg black
set-option -g default-terminal "screen-256color" 
set-option -g pane-active-border-fg green
 
# increase escape time
set -sg escape-time 1
 
# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set -g visual-activity on
#set-window-option -g window-status-current-fg white
#setw -g window-status-current-attr reverse
 
# Automatically set window title
setw -g automatic-rename
 
# vi movement keys
# set-option -g status-keys vi
 
############################################################################
# Status Bar
############################################################################
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
# Batterylife (from SethosII)
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#(~/bin/tmux_battery_charge_indicator.sh)'

set-option -g status-right '#[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
# git branch isn't working
# set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on
 
# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
 
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
 
############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
 
 
############################################################################
# Bindings
############################################################################
bind-key r source-file ~/.tmux.conf\; display "Reloaded!"
#bind Escape copy-mode
bind-key - split-window -v -c '#{pane_current_path}' # Split panes horizontal
bind-key \ split-window -h -c '#{pane_current_path}' # Split panes vertical
bind-key Enter break-pane
 
bind -r ( switch-client -p #go to previous session
bind -r ) switch-client -n #go to next session
bind P pipe-pane -o "cat >> ~/#W.log"\; display "Toggled logging to ~/#W.log" #logging 
# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split
bind C-s set-window-option synchronize-panes #toggle for syncing panes 
############################################################################
# windows
############################################################################
set-window-option -g window-status-current-bg red
bind-key c new-window -c '#{pane_current_path}' # Create new window
bind-key l last-window # C-a l for last active window
bind A command-prompt "rename-window %%"
setw -g aggressive-resize on
set -g status-justify centre #center window list
set -g base-index 0

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# Coloring ---------------------------------------------------------------

setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
# Coloring for command line-------------------------------------------------
set -g message-fg white
set -g message-bg black
set -g message-attr bright
############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
set -g pane-base-index 0 
 
# Resizing ---------------------------------------------------------------
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Use Alt-vim keys without prefix key to switch panes - from @spicycode
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R 

# use vim motion keys while in copy mode
setw -g mode-keys vi
# Coloring ---------------------------------------------------------------
set -g pane-border-fg green 
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg blue
###########################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window
 
# focus on first window
# select-window -t 0

##########################################################################

# copy current buffer to the system clipboard
#used on linux - not sure good for mac
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#move content from system clipboard into a new tmux buffer and pastes it
bind C-p run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

#######################################################################
# copy/paste on mac
set-option -g default-command "tmux rename-window zsh; reattach-to-user-namespace -l zsh"
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
