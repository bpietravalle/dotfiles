[user]
	name = Brian Pietravalle
	email = bpietravalle@gmail.com
[color]
	ui = auto
[pull]
	rebase = true
[push]
  default = simple
[init]
  templatedir = ~/.git_template
  defaultBranch = master
[fetch]
    prune = true
[core]
    editor = vim
    exludesfile = ~/.gitignore
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[alias]
  br = branch
  cm = commit -am
  co = checkout
  cp = cherry-pick
  dump = cat-file -p
  f = fetch
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  pp = pull

	# list last commits
	l = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cgreen\\ (%cr)\\ %Cblue\\ [%cn]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	#display file changes per commit
	ls = log --pretty=format:\"%C(yellow)%h %Cgreen(%cr)%Creset %s %C(bold blue)[%cn]%Creset\" --name-status
	lf = log ..@{u} --stat
	# view line changes
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit --date=relative --decorate
	# log of past day
	lt = log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative
  st = status
  type = cat-file -t

	# grep commit messages
  lgr = !sh -c 'git l --grep=$1 --max-count=20' - # search

	# diffs
  diff = diff --word-diff
  ds = diff --cached # show diff of what has been added to staging
  dc = diff HEAD # show what changed since last commit
  dl = diff HEAD^                 # show what has changed since the commit before the latest commit
  # show diff of last commit of given branch
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  d = diff # Show what has changed but haven't been added to the index yet

	amend = commit --amend            # rename your last commit
  uncommit = reset --soft HEAD^ # undos the last commit
	# reset hard
  rh = reset --hard
  # reset hard to upstream
  ru = reset --hard @{u}
  rs = reset --soft
	# changing branches
  ch = checkout
  chb = checkout -b
  master = checkout master

  # replace phrase with another phrase ... use double quotes!
  replace = "!f() { git grep -l \"$1\" | xargs sed -i '' 's/$1/$2/g'; }; f"

	unmerge = reset --merge ORIG_HEAD
  assume   = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed  = "!git ls-files -v | grep ^h | cut -c 3-"

  # fetch and show what would be merged (use option "-p" to see patch)
  incoming = "!git remote update -p; git log ..@{u}"
  # what would be pushed (currently committed); see also alias difr
  outgoing = log @{u}..

  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	ctags = !.git/hooks/ctags
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
